/* GDB integration with GNU poke.  Poke parts.

   Copyright (C) 2023 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* Exception handler.  */

fun gdb_exception_handler = (Exception exception) void:
{
  if (exception.code != EC_exit && exception.code != EC_signal)
    {
      print ("unhandled "
             + (exception.name == "" ? "unknown" : exception.name)
             + " exception\n");

      if (exception.location != "" || exception.msg != "")
        {
          if (exception.location != "")
            print (exception.location + " ");
          print (exception.msg + "\n");
        }
    }
}

/* Open the memory of the inferior being debugged under GDB as the
   current IO space.  */

open ("gdb://inferior/mem");

type HServer_Callback = ()void;
fun hserver_print_hl = (uint<8> kind, string str, string cmd,
                        HServer_Callback function = lambda void: {}) void:
{
  print str;
}

load_path = ".:" + load_path;
